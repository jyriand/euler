(ns euler.problem-2
  (:require [clojure.core.reducers :as r]))

;; Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

;; 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

;; By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

(defn fibonacci [limit]
  (loop [acc [1 2]]
    (if (> (last acc) limit)
      (butlast acc)
      (recur (conj acc (reduce + (take-last 2 acc)))))))

(defn fibonacci-summer [limit]
  (r/fold + (r/filter even? (fibonacci limit))))

(fibonacci-summer 4000000)
